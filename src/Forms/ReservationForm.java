/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Forms;

import Entities.Categorie;
import Entities.Chambre;
import Entities.Client;
import Entities.Reservation;
import Service.ChambreService;
import Service.ClientService;
import Service.ReservationService;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class ReservationForm extends javax.swing.JInternalFrame {
        private ReservationService rs;
        private DefaultTableModel model;
        private static int id;
        private static int id_c;
        private static  Date DateDebut;
        private static Date DateFin;
        private static ClientService cs;
        private static ChambreService chs;
        private  static Categorie Tableaucategorie;
        private Chambre chambre1; 
        private Client client1;
        int size=0;
    /**
     * Creates new form ReservationForm
     */
    public ReservationForm() {
        initComponents();
        cs =new ClientService();
        chs =new ChambreService();
         rs = new ReservationService();
        model=(DefaultTableModel) TableauReservation.getModel();
        this.setTitle("Gestion des réservations");
        load();
        loadClient();
        loadChambre();
        Load_content();
        
    }
    
     public void load(){
            model.setRowCount(0);
            for(Reservation r : rs.findAll()){
                model.addRow(new Object[]{
                    r.getId_r(),
                    r.getDatedebut(),
                    r.getDatefin(),
                    r.getC(),
                    r.getCh()
                });
            }
        }
        
        public void Load_content(){
          jDateChooser1.setDate(DateDebut);
          jDateChooser2.setDate(DateFin);
    }
      
        public void loadClient(){
            ListeClient.removeAllItems();
            for(Client cl:cs.findAll()){
                ListeClient.addItem(cl);
                size++;
        }
        }
        public void loadChambre(){
            ListeChambre.removeAll();
            for(Chambre ch:chs.findAll()){
                ListeChambre.addItem(ch);
                size++;
        }
        }
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Ajouter = new javax.swing.JButton();
        Modifier = new javax.swing.JButton();
        supprimer = new javax.swing.JButton();
        ListeClient = new javax.swing.JComboBox();
        ListeChambre = new javax.swing.JComboBox();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableauReservation = new javax.swing.JTable();

        jButton1.setText("jButton1");

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("DateDébut   :");

        jLabel2.setText("DateFin         :");

        jLabel3.setText("Client            :");

        jLabel4.setText("Chambre       :");

        Ajouter.setBackground(new java.awt.Color(0, 255, 51));
        Ajouter.setText("Ajouter");
        Ajouter.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AjouterActionPerformed(evt);
            }
        });

        Modifier.setBackground(new java.awt.Color(255, 255, 153));
        Modifier.setText("Modifier");
        Modifier.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Modifier.setInheritsPopupMenu(true);
        Modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifierActionPerformed(evt);
            }
        });

        supprimer.setBackground(new java.awt.Color(255, 0, 0));
        supprimer.setText("Supprimer");
        supprimer.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerActionPerformed(evt);
            }
        });

        jButton2.setText("Filtrer");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ListeClient, javax.swing.GroupLayout.Alignment.LEADING, 0, 324, Short.MAX_VALUE)
                    .addComponent(ListeChambre, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(88, 88, 88))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(Ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(Modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ListeClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ListeChambre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(supprimer)
                    .addComponent(Modifier)
                    .addComponent(Ajouter)
                    .addComponent(jButton2))
                .addContainerGap(85, Short.MAX_VALUE))
        );

        TableauReservation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "id", "DateDebut", "DateFin", "Client", "Chambre"
            }
        ));
        TableauReservation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableauReservationMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableauReservation);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//
    private void AjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AjouterActionPerformed
        if(rs.Create(new Reservation (jDateChooser1.getDate(),jDateChooser2.getDate(),(Client)ListeClient.getSelectedItem(),(Chambre)ListeChambre.getSelectedItem()))){
            JOptionPane.showMessageDialog(this,"Réservation est enregistré");
            load();
        }
    }//GEN-LAST:event_AjouterActionPerformed

    private void ModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifierActionPerformed
        // TODO add your handling code here:
        int reponse=JOptionPane.showConfirmDialog(this, "voulez-vous vraiment modifier cette réservation");
        if(reponse==0){
           Reservation r = new Reservation(jDateChooser1.getDate(),jDateChooser2.getDate(), (Client) ListeClient.getSelectedItem(),(Chambre) ListeChambre.getSelectedItem());
            if(rs.Update(r)){
                JOptionPane.showMessageDialog(this, "Réservation bien modifier");

                load();
            }
        }

    }//GEN-LAST:event_ModifierActionPerformed

    private void supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerActionPerformed
        // TODO add your handling code here:
        int reponse=JOptionPane.showConfirmDialog(this, "voulez-vous vraiment supprimer cette réservation");
        if(reponse==0){
            System.out.println(client1.getId());
            if(rs.Delete(rs.findById(id))){
                JOptionPane.showMessageDialog(this, "Réservation bien supprimé");
                load();
            }
        }
    }//GEN-LAST:event_supprimerActionPerformed

    private void TableauReservationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableauReservationMouseClicked
       id = Integer.parseInt((String) model.getValueAt(TableauReservation.getSelectedRow(), 0).toString());
        DateDebut = (Date) model.getValueAt(TableauReservation.getSelectedRow(), 1);
        DateFin = (Date) model.getValueAt(TableauReservation.getSelectedRow(), 2);
        client1 = (Client) model.getValueAt(TableauReservation.getSelectedRow(), 3);
        chambre1 = (Chambre) model.getValueAt(TableauReservation.getSelectedRow(), 4);
        
        
            for(int i = 0  ; i< ListeClient.getItemCount() ;i++){
                System.out.println(ListeClient.getItemAt(i));
                Client C = (Client) ListeClient.getItemAt(i);
                if(C.getId() == client1.getId() ){
                
                ListeClient.setSelectedIndex(i);
            }
        }
                
            for(int i = 0  ; i< ListeChambre.getItemCount() ;i++){
                System.out.println(ListeChambre.getItemAt(i));
                Chambre ch = (Chambre) ListeChambre.getItemAt(i);
                if(ch.getId_ch() == chambre1.getId_ch()){
                
                ListeChambre.setSelectedIndex(i);
            }
        }
        Load_content();
    }//GEN-LAST:event_TableauReservationMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Ajouter;
    private javax.swing.JComboBox ListeChambre;
    private javax.swing.JComboBox ListeClient;
    private javax.swing.JButton Modifier;
    private javax.swing.JTable TableauReservation;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton supprimer;
    // End of variables declaration//GEN-END:variables
}
